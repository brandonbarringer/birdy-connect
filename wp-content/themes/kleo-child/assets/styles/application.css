.uppercase {
  text-transform: uppercase; }

.group:after, .width-restrict:after {
  content: "";
  display: table;
  clear: both; }

.sr-only {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0; }

.width-restrict {
  width: 100%;
  max-width: 1320px;
  margin: 0 auto; }
  .\--content.width-restrict {
    max-width: 70rem;
    margin: 0 auto; }

/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*, *:before, *:after {
  box-sizing: border-box; }

img {
  max-width: 100%;
  display: block; }

.logo img {
  width: 200px;
  margin: 0;
    margin-top: 15px; }

#buddypress #members-list .member-inner-list {
  padding-top: 25px;
  padding-bottom: 0;
  text-align: center;
  border-radius: 3px;
  background-color: white; }
  #buddypress #members-list .member-inner-list div.item-avatar.rounded {
    width: 106px;
    height: 106px;
    border-width: 0;
    float: none;
    margin: 0 auto;
    margin-bottom: 15px; }
    #buddypress #members-list .member-inner-list div.item-avatar.rounded img {
      width: 100%; }
    #buddypress #members-list .member-inner-list div.item-avatar.rounded .kleo-online-status {
      width: 16px;
      height: 16px;
      border-color: white;
      right: 11px;
      background-color: #999999; }
      #buddypress #members-list .member-inner-list div.item-avatar.rounded .kleo-online-status.high-bg {
        background-color: #53C473; }
  #buddypress #members-list .member-inner-list .item-title, #buddypress #members-list .member-inner-list .item-meta {
    padding: 0;
    margin: 0; }
  #buddypress #members-list .member-inner-list .item-title {
    font-size: 18px;
    font-weight: 900; }
  #buddypress #members-list .member-inner-list .item-meta {
    margin-bottom: 15px; }
  #buddypress #members-list .member-inner-list .looking {
    font-size: 14px;
    margin-bottom: 15px; }
    #buddypress #members-list .member-inner-list .looking .industry {
      font-size: 18px;
      font-font-weight: 900;
      margin-top: 5px; }
  #buddypress #members-list .member-inner-list .action {
    padding: 15px;
    background-color: #53C473;
    border-radius: 0 0 3px 3px; }
    #buddypress #members-list .member-inner-list .action:empty {
      background-color: transparent;
      padding: 5px; }
    #buddypress #members-list .member-inner-list .action .friendship-button a {
      color: white;
      transition: all .4s; }
      #buddypress #members-list .member-inner-list .action .friendship-button a:hover {
        color: black; }
    #buddypress #members-list .member-inner-list .action .friendship-button.not_friends a {
      background-color: white;
      color: #53C473; }
    #buddypress #members-list .member-inner-list .action #send-private-message a {
      color: white; }
      #buddypress #members-list .member-inner-list .action #send-private-message a:hover {
        color: black; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
